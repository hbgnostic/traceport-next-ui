"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/review/page",{

/***/ "(app-pages-browser)/./src/components/CombinedAllocationChart.tsx":
/*!****************************************************!*\
  !*** ./src/components/CombinedAllocationChart.tsx ***!
  \****************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CombinedAllocationChart)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_chartjs_2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react-chartjs-2 */ \"(app-pages-browser)/./node_modules/react-chartjs-2/dist/index.js\");\n/* harmony import */ var chart_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! chart.js */ \"(app-pages-browser)/./node_modules/chart.js/dist/chart.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\nchart_js__WEBPACK_IMPORTED_MODULE_1__.Chart.register(chart_js__WEBPACK_IMPORTED_MODULE_1__.ArcElement, chart_js__WEBPACK_IMPORTED_MODULE_1__.Tooltip, chart_js__WEBPACK_IMPORTED_MODULE_1__.Legend);\nfunction CombinedAllocationChart(param) {\n    let { functional, programs } = param;\n    const programTotal = functional.program_pct;\n    const combinedData = programs.map((p)=>({\n            label: p.name,\n            value: parseFloat(p.percentage) / 100 * programTotal\n        }));\n    combinedData.push({\n        label: 'Admin',\n        value: functional.admin_pct\n    }, {\n        label: 'Fundraising',\n        value: functional.fundraising_pct\n    });\n    // Generate colors dynamically based on the number of items\n    const generateColors = (count)=>{\n        const baseColors = [\n            '#A0D3D8',\n            '#5DBABF',\n            '#2D8A8F',\n            '#019AA8',\n            '#7BB3B8',\n            '#4A9BA0'\n        ];\n        const adminColor = '#C9E5E9';\n        const fundraisingColor = '#16243E';\n        const colors = [];\n        // Colors for programs (excluding admin and fundraising)\n        for(let i = 0; i < count - 2; i++){\n            colors.push(baseColors[i % baseColors.length]);\n        }\n        // Add admin and fundraising colors\n        colors.push(adminColor, fundraisingColor);\n        return colors;\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-96 h-96 mx-auto mb-12 relative\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_chartjs_2__WEBPACK_IMPORTED_MODULE_2__.Pie, {\n            data: {\n                labels: combinedData.map((d)=>d.label),\n                datasets: [\n                    {\n                        data: combinedData.map((d)=>d.value),\n                        backgroundColor: generateColors(combinedData.length),\n                        borderWidth: 1,\n                        borderColor: '#ffffff'\n                    }\n                ]\n            },\n            options: {\n                responsive: true,\n                maintainAspectRatio: false,\n                plugins: {\n                    legend: {\n                        position: 'bottom',\n                        labels: {\n                            boxWidth: 12,\n                            padding: 15,\n                            font: {\n                                size: 11\n                            },\n                            generateLabels: (chart)=>{\n                                const datasets = chart.data.datasets;\n                                const labels = chart.data.labels || [];\n                                const colors = generateColors(combinedData.length);\n                                return labels.map((label, index)=>{\n                                    const value = datasets[0].data[index];\n                                    const percentage = value.toFixed(1);\n                                    return {\n                                        text: \"\".concat(label, \": \").concat(percentage, \"%\"),\n                                        fillStyle: colors[index],\n                                        strokeStyle: '#ffffff',\n                                        lineWidth: 1,\n                                        index: index\n                                    };\n                                });\n                            }\n                        }\n                    },\n                    tooltip: {\n                        callbacks: {\n                            label: (context)=>{\n                                const label = context.label || '';\n                                const value = context.parsed;\n                                return \"\".concat(label, \": \").concat(value.toFixed(1), \"%\");\n                            }\n                        }\n                    }\n                }\n            }\n        }, void 0, false, {\n            fileName: \"/Users/hummingbird/traceport-smart-guidance/traceport-next-ui/src/components/CombinedAllocationChart.tsx\",\n            lineNumber: 63,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/hummingbird/traceport-smart-guidance/traceport-next-ui/src/components/CombinedAllocationChart.tsx\",\n        lineNumber: 62,\n        columnNumber: 5\n    }, this);\n}\n_c = CombinedAllocationChart;\nvar _c;\n$RefreshReg$(_c, \"CombinedAllocationChart\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/CombinedAllocationChart.tsx\n"));

/***/ })

});